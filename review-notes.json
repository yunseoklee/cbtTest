{
  "lastUpdated": "2025-10-28",
  "version": "1.0",
  "오답노트": [
    {
      "문제": "회귀 테스팅을 수행하는 가장 중요한 이유는?",
      "답변": "변경사항이 기존 기능에 영향을 주지 않았는지 확인",
      "카테고리": "테스트 레벨"
    },
    {
      "문제": "테스트 레벨의 순서로 올바른 것은?",
      "답변": "단위 테스팅 → 통합 테스팅 → 시스템 테스팅 → 인수 테스팅",
      "카테고리": "테스트 레벨"
    },
    {
      "문제": "V모델에서 단위 테스팅과 대응되는 개발 활동은?",
      "답변": "상세 설계",
      "카테고리": "테스트 레벨"
    },
    {
      "문제": "시프트 레프트(Shift-Left) 접근법의 주요 이점은?",
      "답변": "결함을 조기에 발견하여 수정 비용 절감",
      "카테고리": "테스트 원칙"
    },
    {
      "문제": "오류(Error), 결함(Defect), 장애(Failure)의 관계로 올바른 것은?",
      "답변": "오류가 결함을 만들고, 결함이 장애를 일으킬 수 있다",
      "카테고리": "테스트 기초"
    },
    {
      "문제": "동등 분할(Equivalence Partitioning) 기법의 목적은?",
      "답변": "입력 도메인을 동일하게 처리될 것으로 예상되는 그룹으로 나누어 대표값을 테스트",
      "카테고리": "테스트 기법"
    },
    {
      "문제": "경계값 분석(Boundary Value Analysis)에서 2-포인트 기법을 적용할 때 테스트하는 값은?",
      "답변": "유효 범위의 최솟값과 최댓값",
      "카테고리": "테스트 기법"
    },
    {
      "문제": "100% 구문 커버리지(Statement Coverage)를 달성했다는 의미는?",
      "답변": "모든 실행 가능한 코드 라인이 최소 한 번 실행되었음",
      "카테고리": "테스트 기법"
    },
    {
      "문제": "결정 테이블 테스팅이 가장 유용한 상황은?",
      "답변": "복잡한 비즈니스 규칙과 여러 조건의 조합을 테스트할 때",
      "카테고리": "테스트 기법"
    },
    {
      "문제": "탐색적 테스팅의 특징은?",
      "답변": "학습, 테스트 설계, 테스트 실행을 동시에 수행",
      "카테고리": "테스트 기법"
    },
    {
      "문제": "정적 테스팅과 동적 테스팅의 차이는?",
      "답변": "정적: 코드를 실행하지 않고 수행, 동적: 코드를 실행하며 수행",
      "카테고리": "정적 테스팅"
    },
    {
      "문제": "가장 공식적인 리뷰 유형은?",
      "답변": "인스펙션(Inspection) - 역할 정의, 체크리스트 사용, 메트릭 수집",
      "카테고리": "정적 테스팅"
    },
    {
      "문제": "리스크 기반 테스팅의 주요 목적은?",
      "답변": "제품 리스크가 높은 영역에 테스트 노력을 집중",
      "카테고리": "테스트 관리"
    },
    {
      "문제": "테스트 종료 조건(Exit Criteria)의 예시가 아닌 것은?",
      "답변": "테스트 환경 준비 완료 (이것은 진입 조건)",
      "카테고리": "테스트 관리"
    },
    {
      "문제": "애자일 개발에서 테스팅의 특징은?",
      "답변": "각 스프린트마다 지속적 테스팅과 빠른 피드백",
      "카테고리": "개발 방법론"
    },
    {
      "문제": "테스트 자동화가 가장 효과적인 테스트 유형은?",
      "답변": "회귀 테스팅 (반복 실행으로 ROI 높음)",
      "카테고리": "테스트 자동화"
    },
    {
      "문제": "검증(Verification)과 확인(Validation)의 차이는?",
      "답변": "검증: 제품을 올바르게 만드는가, 확인: 올바른 제품을 만드는가",
      "카테고리": "테스트 기초"
    },
    {
      "문제": "결함 우선순위와 심각도의 관계는?",
      "답변": "독립적으로 결정 가능 (심각도: 기술적 영향, 우선순위: 비즈니스 중요도)",
      "카테고리": "결함 관리"
    },
    {
      "문제": "테스트 피라미드의 구조는?",
      "답변": "하단에 단위 테스트(많음), 중간에 통합 테스트, 상단에 E2E 테스트(적음)",
      "카테고리": "테스트 전략"
    },
    {
      "문제": "테스트 오라클(Test Oracle)이란?",
      "답변": "테스트 실행 결과가 올바른지 판단하기 위한 정보의 소스",
      "카테고리": "테스트 기초"
    }
  ]
}
